version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    environment:
      - NODE_ENV=development
      - PORT=5001
      - DATABASE_URL=${DATABASE_URL}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - RPC_URL=${RPC_URL}
      - CHAIN_ID=${CHAIN_ID}
      - CONTRACT_ADDRESS_SCORE_USER=${CONTRACT_ADDRESS_SCORE_USER}
      - CONTRACT_ADDRESS_FAN_CLUBS=${CONTRACT_ADDRESS_FAN_CLUBS}
      - PRIVATE_KEY=${PRIVATE_KEY}
    volumes:
      - ./src/backend:/app/src/backend
      - /app/src/backend/node_modules
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5001/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis for caching (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped

volumes:
  redis_data: 